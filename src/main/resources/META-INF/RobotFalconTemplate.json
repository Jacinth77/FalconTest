{"id":"RobotFalconTemplate","robotType":"ROBOT","mainClass":"com.novayre.jidoka.robot.test.RobotFalconTemplate","actions":["start","searchImage","ReadOCR","recognize","end"],"conditionalActions":[],"fieldLinks":[],"actionDetails":[{"id":"start","implementation":"/**\n\t * Initialize the modules\n\t * @throws IOException \n\t */\npublic void start() throws IOException {\n    server = JidokaFactory.getServer();\n    client = IClient.getInstance(this);\n    falcon = IFalcon.getInstance(this, client);\n    images = JidokaImageSupport.getInstance(this);\n    IFalconProcess falconProcess = falcon.getFalconProcess();\n    server.setNumberOfItems(1);\n    server.setCurrentItem(1, images.getTestPng().getDescription());\n}"},{"id":"searchImage","implementation":"/**\n\t * Search image.\n\t * @throws IOException \n\t * @throws AWTException \n\t */\npublic void searchImage() throws Exception {\n    IFalconImage testImage = images.getTestPng().search();\n    // Uncomment to apply 25% noise and color tolerance \n    //\t\ttestImage.setTolerance(.25f);\n    //\t\ttestImage.getOptions().colorTolerance(.25f);\n    server.info(\"Searching the image: \" + testImage.getDescription());\n    // Sends the image to the trace\n    falcon.sendImage(testImage.getImage(), \"Test image\");\n    server.info(\"Desktop capture\");\n    server.sendScreen(\"Current desktop\");\n    // Image search on the desktop\n    if (testImage.search().found()) {\n        server.info(\"Image found at: \" + testImage.getPointsWhereFound().get(0));\n        // Draw a rectangle where the image was found\n        drawRectangle(testImage);\n        // Single left click over the image\n        testImage.clickOnCenter();\n        server.setCurrentItemResultToOK();\n        ReadOCR();\n    } else {\n        server.warn(\"Image not found\");\n        server.setCurrentItemResultToWarn();\n    }\n}"},{"id":"ReadOCR","implementation":"/*\n\tmethod for OCR\n\t */\npublic void ReadOCR() throws Exception {\n    IFalconProcess falconProcess = falcon.getFalconProcess();\n    Rectangle r = new  Rectangle(0, 3, 276, 51);\n    OCROptions o = new  OCROptions();\n    o.setConfiguration(null);\n    o.setLanguageInImage(\"eng\");\n    o.setTextFormInImage(1);\n    Path screenshot = Paths.get(server.getCurrentDir(), \"screenshot.png\");\n    BufferedImage img = ImageIO.read(new  File(String.valueOf(screenshot)));\n    server.info(\"Data  \" + img.getData());\n    server.info(\"Answer    \" + falcon.extractText(img, r, ETextFormInImage.AUTOMATIC_PAGE_SEGMENTATION_WITH_OSD, ELanguageInImage.ENGLISH, null, 1, 1));\n}"},{"id":"recognize","implementation":"public void recognize() throws Exception {\n    Path screenshot = Paths.get(server.getCurrentDir(), \"screenshot_mod.png\");\n    BufferedImage defaultImage = ImageIO.read(Paths.get(server.getCurrentDir(), \"screenshot_mod.png\").toFile());\n    if (defaultImage != null) {\n        Rectangle rectanguloCif = new  Rectangle(defaultImage.getWidth(), defaultImage.getHeight());\n        Graphics2D g2d = defaultImage.createGraphics();\n        IFalconProcess falconProcess = falcon.getFalconProcess();\n        StartParameters s = new  StartParameters();\n        s.setLogImages(true);\n        s.setLogIntermediateMessages(true);\n        s.setImageDescription(\"Original\");\n        falconProcess.start(defaultImage, s);\n        falconProcess.ocr(new  OCRParameters().languageInImage(\"eng\").configuration(null).textFormInImage(1));\n        String output = addSuffix(screenshot.toFile().getAbsolutePath(), \"_modnew\");\n        File f = new  File(output);\n        ImageIO.write(defaultImage, \"png\", f);\n        server.info(\"Save image modified: \" + output);\n        falcon.sendImage(ImageIO.read(new  File(output)), output);\n    } else {\n        server.info(\"Null Image\");\n    }\n}"},{"id":"end","implementation":"/**\n\t * End.\n\t */\npublic void end() {\n}"}],"conditionalActionDetails":[],"sdkMethods":[]}